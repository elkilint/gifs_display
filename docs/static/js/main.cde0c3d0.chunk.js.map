{"version":3,"sources":["Component/AddCategory.js","helpers/GetGifs.js","Component/GifGridItem.js","Component/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","length","cate","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAU,IAFF,mBAErCC,EAFqC,KAEzBC,EAFyB,KAwB5C,OACI,uBAAMC,SAhBW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IAE7BR,GAAe,SAAAS,GAAI,OACdP,GADc,mBACCO,OAEpBN,EAAe,IACfO,QAAQC,IAAI,UAMZ,UACI,+CAEA,uBAEAC,KAAO,OACPC,MAASX,EACTY,SA5BkB,SAACT,GAEvBF,EAAcE,EAAEU,OAAOF,c,+BCVlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,sBAIKI,MAAMF,GAJX,cAIbG,EAJa,gBAKIA,EAAUC,OALd,uBAKXC,EALW,EAKXA,KAEFC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAehBM,GAfgB,4CAAH,sDCGPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAW,4CAAhB,UACI,qBAAKC,IAAMf,EAAKgB,IAAON,IACvB,kCAAKA,SCDJO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECJZ,SAACA,GAAc,IAAD,EAEZhB,mBAAU,CAEhCuB,KAAM,GACNa,SAAS,IALyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA2B1C,OAlBAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAM,SAAAd,GAEHY,EAAS,CAELf,KAAMG,EACNU,SAAS,SAMlB,CAACpB,IAIGqB,EDnB4BI,CAAazB,GAAhCa,EAJwB,EAI7BN,KAAaa,EAJgB,EAIhBA,QAUpB,OACI,qCACA,qBAAIJ,UAAY,sBAAhB,cAAyChB,EAAzC,OAECoB,GAAW,6CAER,qBAAKJ,UAAY,YAAjB,SAGKH,EAAOJ,KAAK,SAACC,GAAD,OACT,cAAC,EAAD,eAEKA,GADEA,EAAIC,aE1BlBe,EAAgB,WAAO,IAAD,EAEM1C,mBAAU,CAAC,UAFjB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAU/B,OACI,qCACI,oDACA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,uBAIA,6BAEA4C,EAAWlB,KAAK,SAAAT,GAAQ,OAIpB,aAFA,CAEC,EAAD,CAEIA,SAAaA,GADPA,Y,MCzB1B4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.cde0c3d0.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, SetInputValue] = useState ('');\n\n    const handleInputChange = (e) => {\n\n        SetInputValue(e.target.value);\n\n    }\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n       if (inputValue.trim().length >2){\n\n        setCategories (cate => \n            [inputValue, ...cate]\n        )\n        SetInputValue ('');\n        console.log('ping');\n\n       }\n        \n    }\n    return (\n        <form onSubmit = {handleSubmit}>\n            <h2> Add Category</h2>\n\n            <input \n            \n            type = 'text'\n            value = {inputValue}\n            onChange = {handleInputChange}\n            \n            />\n\n\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n\n    setCategories: PropTypes.func.isRequired\n\n\n}","export const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=gsnDLbfNdRmKKdtcVJfkXj9O7nfayurg&q=${encodeURI(category)}&limit=10` //ojo con los backtics\n \n    const respuesta = await fetch(url);\n    const { data } = await respuesta.json(); //ojo con la desustructuración de data\n\n    const gifs =data.map( img => {\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url, // signo de interrogación para preguntar si vienen las imagenes\n        }\n    })\nreturn gifs;\n}\n","import React from 'react'\n\n\nexport const GifGridItem = ({id, title, url}) => {\n   // console.log (id, title, url);\n    return (\n        <div className =\"card  animate__animated animate__fadeInUp\">\n            <img src= {url} alt = {title} />\n            <p> {title}</p>\n        </div>\n    )\n}\n","import React, {useState, useEffect}from 'react'\nimport {useFetchGifs} from '../hooks/useFetchGifs'\n\nimport { GifGridItem } from './GifGridItem';\n// import { getGift} from '../helpers/GetGifs';\n\n\nexport const GiftGrid = ({category}) => {\n\n    // const [images, setimages] = useState([]);\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    // useEffect( ()=> {\n\n    //     getGift(category)\n    //     .then (setimages);\n\n    // }, [category])\n   \n\n    return (\n        <> \n        <h3 className = 'animate__fadeInLeft' > {category } </h3>\n\n        {loading && <p> Cargando...</p>}\n                        \n            <div className = \"card-grid\"> \n            \n            {                \n                 images.map ((img) => (\n                    <GifGridItem  \n                    key = {img.id}\n                    { ...img }\n                     />\n\n                 ))\n    \n                 }\n        </div>\n\n        </>\n\n    )\n                }","import {useState, useEffect} from 'react'\nimport {getGifs, getGift} from '../helpers/GetGifs'\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState ({\n\n        data: [],\n        loading: true,\n\n    });\n\nuseEffect(() => {\n\n    getGifs(category)\n    .then (img => {\n\n        setState({\n\n            data: img,\n            loading: false,\n\n        })\n\n    })\n \n}, [category])\n\n\n\nreturn state;\n}\n\n\n","import React, {useState} from 'react'\nimport { AddCategory } from './Component/AddCategory';\nimport { GiftGrid } from './Component/GiftGrid';\n\n\n\nexport const GiftExpertApp = () => {\n\n    const [ categories, setCategories] = useState (['blues']);\n\n    //const handleAdd = ()=>{\n\n      //  setCategories ( [...categories, 'punk']);\n\n    \n\n    return (\n        <>\n            <h2> Gift Expert App  </h2>\n            <AddCategory setCategories = {setCategories}/>\n\n            <hr />\n\n            \n\n            <ol>\n            {\n            categories.map( category => (\n\n                //return <li key = {category}> {category}</li>\n\n                <GiftGrid \n                    key={ category }\n                    category = { category}\n                \n                    />\n            )\n            )\n            }\n            </ol>\n            \n            </>\n    )\n\n        }","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GiftExpertApp} from './GiftExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GiftExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}